[alias]
	alias = config --get-regexp alias
	aa = add --all
	ap = add --patch
	au = add --update
	be = branch --edit-description
	bm = branch --merged
	bnm = branch --no-merged
	bd = branch -d
	bd = branch -D
	ca = commit --amend
	cm = commit --message
	cam = commit --amend --message
	cane = commit --amend --no-edit
	commend = commit --amend --no-edit
	co = checkout
	cob = checkout -b
	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	cp-nx = cherry-pick --no-commit -x
	dc = diff --cached
	ds = diff --staged
	dw = diff --word-diff
	dd = diff --check --dirstat --find-copies --find-renames --histogram --color
	cleanest = clean -ffdx
	g = grep
	gl = grep --line-number
	gg = grep --break --heading --line-number --color
	lg = log --graph
	lo = log --oneline
	lp = log --patch
	lfp = log --first-parent
	lt = log --topo-order
	ll = log --graph --topo-order --date=short --abbrev-commit --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn]%Creset'
	lls = log --graph --topo-order --date=short --abbrev-commit --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn]%Creset %Cblue%G?%Creset'
	lll = log --graph --topo-order --date=iso8601-strict --no-abbrev-commit --abbrev=40 --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn <%ce>]%Creset'
	llls = log --graph --topo-order --date=iso8601-strict --no-abbrev-commit --abbrev=40 --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn <%ce>]%Creset %Cblue%G?%Creset'
	grog = log --graph --abbrev-commit --decorate --all --pretty=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
	ls = ls-files
	ls-ignored = ls-files --others --i --exclude-standard
	me = merge --no-commit --no-ff
	pf = pull --ff-only
	pr = pull --rebase
	please = push --force-with-lease
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip
	rbi = rebase --interactive
	fixup = "!f() { TARGET=$(git rev-parse \\$1\\); git commit --fixup=$TARGET && GIT_EDITOR=true git rebase --interactive --autosquash $TARGET~; }; f"
	rl = reflog
	rr = remote
	rrs = remote show
	rru = remote update
	rrp = remote prune
	incoming = !git remote update --prune && git log ..@{upstream}
	outgoing = log @{upstream}..
	sm = submodule
	smi = submodule init
	sma = submodule add
	sms = submodule sync
	smu = submodule update
	smui = submodule update --init
	smuir = submodule update --init --recursive
	ss = status --short
	ssb = status --short --branch
	shorty = status --short --branch
	lasttag = describe --tags --abbrev=0
	lasttagged = !git describe --tags `git rev-list --tags --max-count=1`
	branch-name = rev-parse --abbrev-ref HEAD
	upstream-name = !git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
	push1 = !git push origin $(git branch-name)
	pull1 = !git pull origin $(git branch-name)
	reset-commit = reset --soft HEAD~1
	reset-commit-hard = reset --hard HEAD~1
	reset-commit-clean = !git reset --hard HEAD~1 && git clean -fd
	reset-to-pristine = !git reset --hard && git clean -ffdx
	reset-to-upstream = !git reset --hard $(git upstream-name)
	snapshot = !git stash push snapshot: $(date) && git stash apply stash@{0}
	save = stash push
	pop = stash pop
	panic = !tar cvf ../panic.tar *
[user]
	name = Dmitry Ezhov
	email = ezhovdv@gmail.com
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[core]
	excludesfile = C:\\Users\\Dmitry\\.gitignore
	whitespace = cr-at-eol
#	editor = \"C:/utils/GitExtensions/GitExtensions.exe\" fileeditor
	autocrlf = true
	pager = delta
[submodule]
	recurse = true
[http]
	sslVerify = true
[fetch]
	prune = true
[pager]
	diff = delta
	show = delta
	log = delta
	reflog = delta
[interactive]
	diffFilter = delta --color-only
[delta]
	features = edv
	navigate = true    # use n and N to move between diff sections
	light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
[delta "interactive"]
	keep-plus-minus-markers = false
[delta "decorations"]
	commit-decoration-style = blue ol
	commit-style = raw
	file-style = omit
	hunk-header-decoration-style = blue box
	hunk-header-file-style = red
	hunk-header-line-number-style = "#067a00"
	hunk-header-style = file line-number syntax
[delta "edv"]
	side-by-side = true
	line-numbers = true
	line-numbers-minus-style = "#444444"
	line-numbers-zero-style = "#444444"
	line-numbers-plus-style = "#444444"
	line-numbers-left-format = {nm:>4}┊
	line-numbers-right-format = {np:>4}│
	line-numbers-left-style = blue
	line-numbers-right-style = blue
[credential "https://bitbucket.region.vtb.ru"]
	provider = bitbucket
[i18n]
	filesEncoding = utf-8
[diff]
;	guitool = winmerge
	colorMoved = default
;[difftool "winmerge"]
;	path = C:/Program Files/WinMerge/winmergeu.exe
;	cmd = \"C:/Program Files/WinMerge/winmergeu.exe\" -e -u \"$LOCAL\" \"$REMOTE\"
[merge]
	conflictstyle = diff3
;	guitool = winmerge
;[mergetool "winmerge"]
;	path = C:/Program Files/WinMerge/winmergeu.exe
;	cmd = \"C:/Program Files/WinMerge/winmergeu.exe\" -e -u  -wl -wr -fm -dl \"Mine: $LOCAL\" -dm \"Merged: $BASE\" -dr \"Theirs: $REMOTE\" \"$LOCAL\" \"$BASE\" \"$REMOTE\" -o \"$MERGED\"
[pull]
	rebase = false
[rebase]
	autoStash = false
